/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package data.type.converting.tool;
import java.awt.datatransfer.StringSelection;
import java.awt.Toolkit;
import java.awt.event.*;
import java.awt.datatransfer.Clipboard;
import javax.swing.*;
import java.awt.*;
/**
/**
 *
 * @author C0delust
 */
public class Tab6 extends javax.swing.JPanel {

    /**
     * Creates new form Tab1
     */
    public Tab6() {
        initComponents();
        String cbItems[] = {"Boolean","Byte","Byte()","Char","Decimal","Double","Integer","Long","SByte","Short","Single","String","UInteger","ULong","UShort"};
		
        for (String i : cbItems)
            cb1.addItem(i);
		
        for (String i : cbItems)
            cb2.addItem(i);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new javax.swing.JLabel();
        cb1 = new javax.swing.JComboBox<>();
        label2 = new javax.swing.JLabel();
        cb2 = new javax.swing.JComboBox<>();
        b = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        t = new javax.swing.JTextArea();
        label3 = new javax.swing.JLabel();

        label1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        label1.setText("Convert : ");

        label2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        label2.setText("To : ");

        b.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        b.setText("Convert !");
        b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bActionPerformed(evt);
            }
        });

        t.setEditable(false);
        t.setColumns(20);
        t.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        t.setRows(5);
        t.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                tMouseExited(evt);
            }
        });
        jScrollPane1.setViewportView(t);

        label3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        label3.setForeground(new java.awt.Color(0, 194, 52));
        label3.setText("C o d e   C o p i e d !");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addComponent(b, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(173, 173, 173))))
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cb2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(label3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(169, 169, 169))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(b, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label3)
                .addGap(12, 12, 12))
        );

        label3.setEnabled(false);
    }// </editor-fold>//GEN-END:initComponents

    private void bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bActionPerformed
       	if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As Boolean = true\nDim As Byte() = vOut BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Boolean") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As Boolean = true\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As Boolean = (vIn!=0)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "Byte"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As Byte() = BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Byte") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As Byte = 0\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn() As Byte = New Byte(){ 1, 1, 0 }\nDim vOut As Boolean = BitConverter.ToBoolean(vIn, 0) ' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn() As Byte = New Byte() {1, 1, 0}\nDim vOut As Byte = Convert.ToByte(BitConverter.ToChar(vIn, 0)) ' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn() As Byte = New Byte(){ 1, 1, 0 }\nDim vOut As Char = BitConverter.ToInt32(vIn, 0) ' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn() As Byte = New Byte(){ 1, 1, 0 }\nDim vOut As Decimal = Convert.ToDecimal(BitConverter.ToDouble(vIn, 0)) ' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn() As Byte = New Byte(){ 1, 1, 0 }\nDim vOut As Double = BitConverter.ToDouble(vIn, 0) ' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn() As Byte = New Byte(){ 1, 1, 0 }\nDim vOut As Integer = BitConverter.ToInt32(vIn, 0) ' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn() As Byte = New Byte(){ 1, 1, 0 }\nDim vOut As Long = BitConverter.ToInt64(vIn, 0) ' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn() As Byte = New Byte() {1, 1, 0}\nDim vOut As SByte = Convert.ToSByte(BitConverter.ToChar(vIn, 0)) ' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn() As Byte = New Byte(){ 1, 1, 0 }\nDim vOut As Short = BitConverter.ToInt16(vIn, 0) ' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn() As Byte = New Byte(){ 1, 1, 0 }\nDim vOut As Single = Convert.ToSingle(BitConverter.ToDouble(vIn, 0)) ' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn() As Byte = new Byte(){\"F\",\"O\",\"O\"}\nDim vOut As String = System.Text.Encoding.UTF8.GetString(vIn)");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn() As Byte = New Byte(){ 1, 1, 0 }\nDim vOut As UInteger = BitConverter.ToUInt32(vIn, 0) \' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn() As Byte = New Byte(){ 1, 1, 0 }\nDim vOut As ULong = BitConverter.ToUInt64(vIn, 0) ' 0:Which Byte position to convert");
	else if ((cb1.getSelectedItem() == "Byte()") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn() As Byte = New Byte(){ 1, 1, 0 }\nDim vOut As UShort = BitConverter.ToUInt16(vIn, 0) ' 0:Which Byte position to convert");

	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As Char = \'\\x0\' \nDim vOut As Boolean = (vIn!=0)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As Byte() = BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "Char"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Char") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As Char = \"0\"\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As Boolean = Convert.ToBoolean(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As Decimal = 0.0\nDim vOut As Byte() = BitConverter.GetBytes(Convert.ToDouble(vIn))");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Decimal") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As Decimal = 0.0M\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As Boolean = Convert.ToBoolean(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As Byte() = BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "Double"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Double") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As Double = 0.0\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As Boolean = Convert.ToBoolean(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As Byte() = BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "Integer"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Integer") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As Integer = 0\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As Long = 0\nDim vOut As Boolean = Convert.ToBoolean(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As Long = 0\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As Long = 0\nDim vOut As Byte() = BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As Long = 0\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As Long = 0\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As Long = 0\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As Long = 0\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "Long"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As Long = 0\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As Long = 0\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As Long = 0\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As Long = 0\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As Long = 0\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As Long = 0\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Long") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As Long = 0\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As Boolean = Convert.ToBoolean(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As Byte() = BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "SByte"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "SByte") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As SByte = 0\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As Short = 0\nDim vOut As Boolean = Convert.ToBoolean(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As Short = 0\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As Short = 0\nDim vOut As Byte() = BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As Short = 0\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As Short = 0\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As Short = 0\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As Short = 0\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As Short = 0\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As Short = 0\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "Short"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As Short = 0\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As Short = 0\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As Short = 0\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As Short = 0\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Short") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As Short = 0\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As Boolean = Convert.ToBoolean(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As Byte() = BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "Single"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "Single") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As Single = 0.0f\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As String = \"true\"\nDim vOut As Boolean = Convert.ToBoolean(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As String = \"0\"\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As String = \"FOO\"\nDim vOut() As Byte = System.Text.Encoding.UTF8.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As String = \"f\"\nDim vOut As Char = Convert.ToChar(vIn);");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As String = \"0.0\"\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As String = \"0.0\" \nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As String = \"0\"\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As String = \"0\"\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As String = \"0\"\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As String = \"0\"\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As String = \"0.0\"\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "String"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As String = \"0\"\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As String = \"0\"\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "String") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As String = \"0\"\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As Boolean = Convert.ToBoolean(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As Byte() = BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "UInteger") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As UInteger = 0\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As Boolean = Convert.ToBoolean(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As Byte() = BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "ULong"))
		t.setText("N / A");
	else if ((cb1.getSelectedItem() == "ULong") & (cb2.getSelectedItem() == "UShort"))
		t.setText("Dim vIn As ULong = 0\nDim vOut As UShort = Convert.ToUInt16(vIn)");

	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "Boolean"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As Boolean = Convert.ToBoolean(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "Byte"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As Byte = Convert.ToByte(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "Byte()"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As Byte() = BitConverter.GetBytes(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "Char"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As Char = Convert.ToChar(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "Decimal"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As Decimal = Convert.ToDecimal(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "Double"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As Double = Convert.ToDouble(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "Integer"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As Integer = Convert.ToInt32(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "Long"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As Long = Convert.ToInt64(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "SByte"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As SByte = Convert.ToSByte(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "Short"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As Short = Convert.ToInt16(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "Single"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As Single = Convert.ToSingle(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "String"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As String = vIn.ToString(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "UInteger"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As UInteger = Convert.ToUInt32(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "ULong"))
		t.setText("Dim vIn As UShort = 0\nDim vOut As ULong = Convert.ToUInt64(vIn)");
	else if ((cb1.getSelectedItem() == "UShort") & (cb2.getSelectedItem() == "UShort"))
		t.setText("N / A");

// TODO add your handling code here:
    }//GEN-LAST:event_bActionPerformed

    private void tMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tMouseEntered
        if(!t.getText().equals(""))
        {
            label3.setEnabled(true);
            StringSelection stringSelection = new StringSelection(t.getText());
            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
            clipboard.setContents(stringSelection, null);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tMouseEntered

    private void tMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tMouseExited
        label3.setEnabled(false); // TODO add your handling code here:
    }//GEN-LAST:event_tMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b;
    private javax.swing.JComboBox<String> cb1;
    private javax.swing.JComboBox<String> cb2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label1;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel label3;
    private javax.swing.JTextArea t;
    // End of variables declaration//GEN-END:variables
}
